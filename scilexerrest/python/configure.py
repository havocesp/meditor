#!/usr/bin/env python
# -*- encoding:utf-8 -*-

import os
import sipconfig
from PyQt5.QtCore import PYQT_CONFIGURATION

# The name of the SIP build file generated by SIP and used by the build
# system.
build_dir = './'
build_file = 'scilexerrest.sbf'

# Get the SIP configuration information.
config = sipconfig.Configuration()

# Run SIP to generate the code.
if not os.path.exists(build_dir):
    os.makedirs(build_dir)
os.system(' '.join([
    config.sip_bin,
    PYQT_CONFIGURATION.get('sip_flags', ''),
    '-I', os.path.join(config.default_sip_dir, 'PyQt5'),
    '-c', build_dir,
    '-b', os.path.join(build_dir, build_file),
    'scilexerrest.sip',
]))

# Create the Makefile.
makefile = sipconfig.SIPModuleMakefile(
    config, build_file,
    dir=build_dir,
)

# Add the library we are wrapping.  The name doesn't include any platform
# specific prefixes or extensions (e.g. the 'lib' prefix on UNIX, or the
# '.dll' extension on Windows).

if config.platform == 'win32-g++':
    qt_path = 'C:\\Qt\\Qt5.5.1.mingw\\5.5\\mingw492_32'
elif config.platform == 'win32-msvc2010':
    qt_path = 'C:\\Qt\\Qt5.5.1.msvc2010\\5.5\\msvc2010'
else:
    raise 'Unknown platform: %s' % config.platform
print('QT_DIR: %s' % qt_path)

makefile.extra_include_dirs = [
    '../',
    os.path.join(qt_path, 'include'),
    os.path.join(qt_path, 'include', 'QtCore'),
    os.path.join(qt_path, 'include', 'QtGui'),
    os.path.join(qt_path, 'include', 'QtWidgets'),

]
makefile.extra_lib_dirs = [
    os.path.join('..', 'release'),
    os.path.join(qt_path, 'lib'),
]
makefile.extra_libs = [
    'qscilexerrest',
    'qscintilla2',
    'Qt5PrintSupport', 'Qt5Widgets', 'Qt5Gui', 'Qt5Core',
]

# Generate the Makefile itself.
makefile.generate()
